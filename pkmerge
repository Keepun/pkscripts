#!/usr/bin/php
<?php
$_DIR = '/var/tmp/pkscript';
$_FILE = 'pks'.@date('ymd-H-i-s');
//////////////////////////////////
if (!defined('__DIR__')) define('__DIR__', dirname(__FILE__)); // for PHP<5.3
require_once(__DIR__.'/includes/getopt.php');
require_once(__DIR__.'/includes/portageq.class.php');
require_once(__DIR__.'/includes/global.php');

$_HELP=false;
$_DESC=false;
$_FIND=array();
$_EMERGE='';
$_EMERGE_CMD='--autounmask=y --color=n --tree --unordered-display';
$_atoms=array();

$_args=_getopt('hd', array('help','desc','find::','emerge::','emerge-cmd::'));
if ($_args === false) die("Error parse arguments!\n");
foreach ($_args as $arg => $val)
{
	switch ($arg)
	{
		case 'h':
		case 'help':
			$_HELP=true; break;
		case 'd':
		case 'desc':
			$_DESC=true; break;
		//case 'desc-no-line': Need?
		//	$_DESC=true; break;
		case 'find':
			if (is_array($val)) $_FIND=$val;
			else $_FIND[]=$val;
			break;
		case 'emerge':
			if (is_array($val)) $_EMERGE=implode(' ', $val);
			else $_EMERGE=$val;
			break;
		case 'emerge-cmd':
			if (is_array($val)) $_EMERGE_CMD=implode(' ', $val);
			else $_EMERGE_CMD=$val;
			break;
		case '-':
			if (is_array($val)) $_atoms=$val;
			else $_atoms[]=$val;
			break;
	}
}

for ($x=count($_FIND)-1; $x>=0; $x--)
{
	if (!preg_match("/^\S+\/\S+$/", $_FIND[$x]))
	{
		print "Error argument: --find=\"{$_FIND[$x]}\"\n";
		unset($_FIND[$x]);
	}
}

foreach ($_FIND as $atom)
{
	print "\n$atom\n";
	$atomInfo=atomInfo($atom, false) or die("Error: Not found!\n");
	foreach ($atomInfo as $a)
		$_atoms[]=$a['category'].'/'.$a['name'];//.'-'.$a['version'];
}

if ($_HELP || count($_atoms)==0)
{
$help=<<<HELP
pkmerge: Custom installation of packages.
Usage:
    pkmerge [-h|--help] [-d|--desc] [-f|--find] [--emerge] [--emerge-cmd] (atoms)

    -h --help    this help
    -d --desc    get description for packages

       --find="category/package" for `find` packages

Atoms: It's all types for emerge.

Emerge: run `emerge -p EMERGE_CMD EMERGE atoms`
    --emerge=""
    --emerge-cmd="{$_EMERGE_CMD}"

category/package: can use ? or *
    pkmerge --find="media*/*font*" --find="app-misc/*"
WARNING: category/package must be in quotes (" " or ' ')

HELP;
	die($help);
}

$emerge = array();
$emerge_cmd = "emerge -p $_EMERGE_CMD $_EMERGE ";
foreach ($_atoms as $atom) $emerge_cmd.=escapeshellarg($atom).' ';
exec("$emerge_cmd |& cat", $emerge);
print implode("\n", $emerge);

@mkdir($_DIR);

$fscript = @fopen($_DIR.'/'.$_FILE, 'w+');
if (!$fscript) die("$_DIR/$_FILE not created!\n");

$args = escapeshellcmd(implode(' ', $_SERVER['argv']));
$hcode = <<<CODE
#!/usr/bin/php
<?php
\$pkmerge='{$args}';
\$pk=array();
define('S','S',true);
define('M','M',true);
define('E',M,true);
/////////////////////////////

//// \$pk[][S-setup or E|M-exclude]
//// Delete # where need.


CODE;
fwrite($fscript, $hcode);

$_pkgs_all = array();
foreach ($emerge as $line)
{
	if (preg_match_all("/^\[ebuild([^\]]+)\](\s+)([\w-]+)\/([\w-\.]+)(.*)?$/", $line, $match))
	{
		$line_info = array();
		$line_info['status'] = str_replace(' ', '', $match[1][0]);
		$line_info['tree'] = strlen($match[2][0]);
		$line_info['category'] = $match[3][0];
		$line_info['name'] = $match[4][0];
		$line_info['info'] = $match[5][0];
		
		$_pkgs_all[] = array($line_info['tree'], $line_info['category'].'/'.$line_info['name']);
		
		//if (@strpbrk($line_info['status'], $_notebuild) !== false) continue;
		
		print $line_info['category'].'/'.$line_info['name'].":\n";
		$pk_text = '#$pk[][M]=/*';
		if ($line_info['tree'] == 1) $pk_text = ' $pk[][S]=/*';
		else if (strpos($line_info['status'], '#') !== false) $pk_text = ' $pk[][M]=/*';
		fwrite($fscript, $pk_text.str_repeat('|', $line_info['tree']-1)."*/\"{$line_info['category']}/{$line_info['name']}\";\n");
		if ($_DESC)
		{
			if (atomInfo($line_info['category'].'/'.$line_info['name']) !== false)
				fwrite($fscript, "           /*".implode('', $Portageq->metadata($line_info['category'].'/'.$line_info['name'], 'DESCRIPTION'))."*/\n");
			else print "Warning: info for ".$line_info['category'].'/'.$line_info['name']." not found.\n";
		}
	}
}

$code = <<<CODE

/////////////////////////////////////
// Don't edit!!!

CODE;

foreach ($_pkgs_all as $k => $_pkg)
	$code .= "\$_pkgs_all[$k]=array('".implode("','",$_pkg)."');\n";

$code .= "\n\nrequire_once('".__DIR__."/includes/script.php');\n";

fwrite($fscript, $code);
fclose($fscript);
chmod($_DIR.'/'.$_FILE, 0777);

print "\nEdit $_DIR/$_FILE\n";
